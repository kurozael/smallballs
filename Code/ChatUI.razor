@using Sandbox;
@using Sandbox.UI;

@inherits PanelComponent
@implements Component.INetworkListener

<root>
    <div class="output">
        @foreach (var entry in Entries)
        {
            <div class="chat_entry">
                @if (entry.SteamId > 0)
                {
                    <div class="avatar" style="background-image: url( avatar:@entry.SteamId )"></div>
                }
                <div class="author">@entry.Author</div>
                <div class="message">@entry.Message</div>
            </div>
        }
    </div>

    <div class="input">
        <TextEntry @ref="InputBox" onsubmit="@ChatFinished"></TextEntry>
    </div>

</root>

@code
{
    TextEntry InputBox;

    public record Entry( ulong SteamId, string Author, string Message, RealTimeSince TimeSinceAdded );

    readonly List<Entry> Entries = new();

    protected override int BuildHash() => System.HashCode.Combine( Connection.All.Count() );

    protected override void OnUpdate()
    {
        if ( InputBox is null )
            return;

        Panel.AcceptsFocus = false;

        if ( Input.Pressed( "Chat" ) )
        {
            InputBox.Focus();
        }

        if ( Entries.RemoveAll( x => x.TimeSinceAdded > 20f ) > 0f )
        {
            StateHasChanged();
        }

        SetClass( "open", InputBox.HasFocus );
    }

    void ChatFinished()
    {
        var text = InputBox.Text;
        InputBox.Text = "";

        if (string.IsNullOrWhiteSpace(text))
            return;

        AddText( text );
    }

    [ConCmd( "say" )]
    private static void Say( string msg )
    {
        var chat = Game.ActiveScene.GetAll<ChatUI>().FirstOrDefault();

        if ( Application.IsDedicatedServer )
            chat.AddSystemText( msg );
        else
            chat.AddText( msg );
    }

    [Rpc.Broadcast]
    public void AddText( string message )
    {
        message = message.Truncate( 300 );

        if ( string.IsNullOrWhiteSpace( message ) )
            return;

        var author = Rpc.Caller.DisplayName;
        var steamId = Rpc.Caller.SteamId;

        Log.Info( $"{author}: {message}" );

        Entries.Add( new Entry( steamId, author, message, 0f ) );
        StateHasChanged();
    }

    [Rpc.Broadcast]
    public void AddSystemText( string message )
    {
        message = message.Truncate( 300 );

        if ( string.IsNullOrWhiteSpace( message ) )
            return;

        Entries.Add( new Entry(0, "ℹ️", message, 0f ) );
        StateHasChanged();
    }
}
